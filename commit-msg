#!/usr/bin/env ruby
#
# Git hook for breathalyzing before committing

require 'serialport'
require 'io/console'

class String
    def black;          "\e[30m#{self}\e[0m" end
    def red;            "\e[31m#{self}\e[0m" end
    def green;          "\e[32m#{self}\e[0m" end
    def brown;          "\e[33m#{self}\e[0m" end
    def blue;           "\e[34m#{self}\e[0m" end
    def magenta;        "\e[35m#{self}\e[0m" end
    def cyan;           "\e[36m#{self}\e[0m" end
    def gray;           "\e[37m#{self}\e[0m" end

    def bg_black;       "\e[40m#{self}\e[0m" end
    def bg_red;         "\e[41m#{self}\e[0m" end
    def bg_green;       "\e[42m#{self}\e[0m" end
    def bg_brown;       "\e[43m#{self}\e[0m" end
    def bg_blue;        "\e[44m#{self}\e[0m" end
    def bg_magenta;     "\e[45m#{self}\e[0m" end
    def bg_cyan;        "\e[46m#{self}\e[0m" end
    def bg_gray;        "\e[47m#{self}\e[0m" end

    def bold;           "\e[1m#{self}\e[22m" end
    def italic;         "\e[3m#{self}\e[23m" end
    def underline;      "\e[4m#{self}\e[24m" end
    def blink;          "\e[5m#{self}\e[25m" end
    def reverse_color;  "\e[7m#{self}\e[27m" end
end

CONFIG = ".gitdown"
NORMAL = 0.05
DESCRIPTIONS = {
    "normal" => "You best not be tipsy. Not even one bit.",
    "krunk" => "If you ain't WASTED, you ain't COMMITTIN'",
    "baller" => "BALL(m)ER PEAK: A narrow spike of blood alcohol content (0.13% - 0.15%) leading to high programming productivity.",
    "math" => "A hobbled mode for those who haven't acquired their DrinkShield yet. Answer math problems to gain commit privileges."
}
BALLMER_MIN = 0.13
BALLMER_MAX = 0.15

MESSAGE_SUCCESS = "\nCommit successful.\n"
MESSAGE_FAILED = "\nTry again later...\n"

mode = ""
port_str = ""
verbose = false

# Read the .gitdown configuration file.
#
if File.exist?(CONFIG)
  File.open(CONFIG).each do |line|
    if line =~ /^mode.*/
      mode = line.split(':')[1].strip
    elsif line =~ /^port.*/
      port_str = line.split(':')[1].strip
    elsif line =~ /^verbose.*/
      if line.split(':')[1].strip.downcase == 'true'
        verbose = true
      else
        verbose = false
      end
    end
  end
else
  puts "No .gitdown file found"
  exit 1
end

# Check if configuration has been found.
#
if mode.empty? or port_str.empty?
  puts ".gitdown file contains errors."
  puts "Make sure it contains a mode and port."
  exit 1
end

puts "\n"
puts "Current commit challenge: #{mode.upcase.bold} mode."
puts "\n"
puts DESCRIPTIONS[mode]
puts "\n"

# Taking control of the serial port resets the Arduino.
# Serial port init variables
# Wait 4 seconds for it to start up and auto-calibrate
baud_rate = 9600
data_bits = 8
stop_bits = 1
parity = SerialPort::NONE
sp = SerialPort.new(port_str, baud_rate, data_bits, stop_bits, parity)

puts "Calibrating breathalyzer sensor...".bold
sleep(4)
puts "Done."
puts "\n"

puts "Prepare to blow into the breathalyzer!".bold
puts "Breathalyzing starting in 3 seconds..."
sleep(3)
puts "Go..."
puts "\n"

# Get BAC from breathalyzer
sp.write "a" # For the moment, the specific letter sent doesn't matter
sleep(6)     # breathalyzer takes 5 seconds to measure, plus 1 for good measure
bac = sp.gets.chomp.to_f / 100.0

puts "Your blood alcohol content: #{"#{bac}%".bold}."
puts "\n"

if verbose
  puts "BAC Effect Analysis:"
  if bac < 0.03
    puts "At this BAC, the average individual appears normal."
  elsif bac >= 0.03 and bac < 0.06
    puts "At this BAC, you are experiencing mild euphoria, relaxation, and talkativeness. Concentration is impaired."
  elsif bac >= 0.06 and bac < 0.09
    puts "At this BAC, you are experiencing disinhibition and extroversion. Reasoning, depth perception, and peripheral vision are impaired."
  elsif bac >= 0.09 and bac < 0.20
    puts "At this BAC, you are experiencing anger or sadness, boisterousness, and decreased libido. Reflexes and motor control are impaired. Slurred speech is possible."
  elsif bac >= 0.20
    puts "At this BAC, you are experiencing stupor, loss of understanding, and impaired sensations. Loss of consciousness and memory blackout are possible. Don't drink more!"
  end
  puts "\n"
end

commit_file = ARGV[0]
message = File.read(commit_file).strip

case mode
when "normal"
  if bac > NORMAL
    puts "I'm sorry Dave, I can't let you do that..."
    puts MESSAGE_FAILED
    exit 1
  else 
    puts "You are sober. Good job!"
    puts MESSAGE_SUCCESS
    exit 0
  end
when "krunk"
  if bac < NORMAL
    puts "Sorry, you still have #{NORMAL - bac}%BAC to go until you're properly drunk..."
    puts MESSAGE_FAILED
    exit 1
  else
    File.open(commit_file, 'w') { |f| f.write(message) }
    puts "You are drunk! Good job."
    puts MESSAGE_SUCCESS
    exit 0
  end
when "baller"
  if bac >= BALLMER_MIN && bac <= BALLMER_MAX
    File.open(commit_file, 'w') { |f| f.write(message) }
    puts "You are at the Ballmer peak. Awesome!"
    puts MESSAGE_SUCCESS
    exit 0
  else
    puts "You're not at the Ballmer peak...get between #{BALLMER_MIN}% and #{BALLMER_MAX}% to get in the zone!"
    puts MESSAGE_FAILED
    exit 1
  end
else
  puts "Incorrect mode, check .gitdown file for examples."
  exit 1
end
